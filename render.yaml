# render.yaml

services:
    - name: frontend
      envVars:
          - key: NODE_ENV
            value: production
          - key: EMAIL_USER
            value: sharetaxmaxideas@gmail.com
          - key: EMAIL_PASSWORD
            value: "kszf qgxd lxfh eegr" # Note: Wrap values with spaces in quotes
          - key: SMTP_SERVER
            value: smtp.gmail.com
          - key: SMTP_PORT
            value: "587" # Note: Wrap numerical values in quotes
          - key: SECRET_KEY
            value: "django-insecure-gcm5)y*&2l)r_+4x((_q(r=g2k4ues%5uk87zr4^!5hl+**r#)"
          - key: DEBUG
            value: "True" # Note: Wrap boolean values in quotes
      buildCommand: npm install && npm run build
      startCommand: npm start
      healthCheckPath: /health
      httpPort: 8000
      disk:
          sizeGB: 1
      concurrency:
          type: fixed
          value: 1
      instanceCount: 1

    - name: backend
      envVars:
          - key: DJANGO_ENV
            value: production
          - key: EMAIL_USER
            value: sharetaxmaxideas@gmail.com
          - key: EMAIL_PASSWORD
            value: "kszf qgxd lxfh eegr" # Note: Wrap values with spaces in quotes
          - key: SMTP_SERVER
            value: smtp.gmail.com
          - key: SMTP_PORT
            value: "587" # Note: Wrap numerical values in quotes
          - key: SECRET_KEY
            value: "django-insecure-gcm5)y*&2l)r_+4x((_q(r=g2k4ues%5uk87zr4^!5hl+**r#)"
          - key: DEBUG
            value: "True" # Note: Wrap boolean values in quotes
      buildCommand: pip install -r requirements.txt
      startCommand: python manage.py runserver 0.0.0.0:8001
      healthCheckPath: /health
      httpPort: 8001
      disk:
          sizeGB: 1
      concurrency:
          type: fixed
          value: 1
      instanceCount: 1
